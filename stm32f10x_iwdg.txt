; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\stm32f10x_iwdg.o --asm_dir=.\ --list_dir=.\ --depend=.\obj\stm32f10x_iwdg.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\obj\stm32f10x_iwdg.crf FWlib\SRC\stm32f10x_iwdg.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  IWDG_WriteAccessCmd PROC
;;;94       */
;;;95     void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
000000  490e              LDR      r1,|L1.60|
;;;96     {
;;;97       /* Check the parameters */
;;;98       assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
;;;99       IWDG->KR = IWDG_WriteAccess;
000002  6008              STR      r0,[r1,#0]
;;;100    }
000004  4770              BX       lr
;;;101    
                          ENDP

                  IWDG_SetPrescaler PROC
;;;114      */
;;;115    void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
000006  490d              LDR      r1,|L1.60|
;;;116    {
;;;117      /* Check the parameters */
;;;118      assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
;;;119      IWDG->PR = IWDG_Prescaler;
000008  6048              STR      r0,[r1,#4]
;;;120    }
00000a  4770              BX       lr
;;;121    
                          ENDP

                  IWDG_SetReload PROC
;;;127      */
;;;128    void IWDG_SetReload(uint16_t Reload)
00000c  490b              LDR      r1,|L1.60|
;;;129    {
;;;130      /* Check the parameters */
;;;131      assert_param(IS_IWDG_RELOAD(Reload));
;;;132      IWDG->RLR = Reload;
00000e  6088              STR      r0,[r1,#8]
;;;133    }
000010  4770              BX       lr
;;;134    
                          ENDP

                  IWDG_ReloadCounter PROC
;;;140      */
;;;141    void IWDG_ReloadCounter(void)
000012  f64a20aa          MOV      r0,#0xaaaa
;;;142    {
;;;143      IWDG->KR = KR_KEY_Reload;
000016  4909              LDR      r1,|L1.60|
000018  6008              STR      r0,[r1,#0]
;;;144    }
00001a  4770              BX       lr
;;;145    
                          ENDP

                  IWDG_Enable PROC
;;;151      */
;;;152    void IWDG_Enable(void)
00001c  f64c40cc          MOV      r0,#0xcccc
;;;153    {
;;;154      IWDG->KR = KR_KEY_Enable;
000020  4906              LDR      r1,|L1.60|
000022  6008              STR      r0,[r1,#0]
;;;155    }
000024  4770              BX       lr
;;;156    
                          ENDP

                  IWDG_GetFlagStatus PROC
;;;164      */
;;;165    FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
000026  4601              MOV      r1,r0
;;;166    {
;;;167      FlagStatus bitstatus = RESET;
000028  2000              MOVS     r0,#0
;;;168      /* Check the parameters */
;;;169      assert_param(IS_IWDG_FLAG(IWDG_FLAG));
;;;170      if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
00002a  4a04              LDR      r2,|L1.60|
00002c  68d2              LDR      r2,[r2,#0xc]
00002e  400a              ANDS     r2,r2,r1
000030  b10a              CBZ      r2,|L1.54|
;;;171      {
;;;172        bitstatus = SET;
000032  2001              MOVS     r0,#1
000034  e000              B        |L1.56|
                  |L1.54|
;;;173      }
;;;174      else
;;;175      {
;;;176        bitstatus = RESET;
000036  2000              MOVS     r0,#0
                  |L1.56|
;;;177      }
;;;178      /* Return the flag status */
;;;179      return bitstatus;
;;;180    }
000038  4770              BX       lr
;;;181    
                          ENDP

00003a  0000              DCW      0x0000
                  |L1.60|
                          DCD      0x40003000
