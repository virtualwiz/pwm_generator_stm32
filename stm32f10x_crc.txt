; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\stm32f10x_crc.o --asm_dir=.\ --list_dir=.\ --depend=.\obj\stm32f10x_crc.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\FWlib\inc -I.\user -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\obj\stm32f10x_crc.crf FWlib\SRC\stm32f10x_crc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  CRC_ResetDR PROC
;;;85       */
;;;86     void CRC_ResetDR(void)
000000  2001              MOVS     r0,#1
;;;87     {
;;;88       /* Reset CRC generator */
;;;89       CRC->CR = CR_RESET_Set;
000002  4910              LDR      r1,|L1.68|
000004  6088              STR      r0,[r1,#8]
;;;90     }
000006  4770              BX       lr
;;;91     
                          ENDP

                  CRC_CalcCRC PROC
;;;96       */
;;;97     uint32_t CRC_CalcCRC(uint32_t Data)
000008  4601              MOV      r1,r0
;;;98     {
;;;99       CRC->DR = Data;
00000a  480e              LDR      r0,|L1.68|
00000c  6001              STR      r1,[r0,#0]
;;;100      
;;;101      return (CRC->DR);
00000e  6800              LDR      r0,[r0,#0]
;;;102    }
000010  4770              BX       lr
;;;103    
                          ENDP

                  CRC_CalcBlockCRC PROC
;;;110      */
;;;111    uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
000012  b510              PUSH     {r4,lr}
;;;112    {
000014  4602              MOV      r2,r0
000016  460b              MOV      r3,r1
;;;113      uint32_t index = 0;
000018  2100              MOVS     r1,#0
;;;114      
;;;115      for(index = 0; index < BufferLength; index++)
00001a  bf00              NOP      
00001c  e004              B        |L1.40|
                  |L1.30|
;;;116      {
;;;117        CRC->DR = pBuffer[index];
00001e  f8520021          LDR      r0,[r2,r1,LSL #2]
000022  4c08              LDR      r4,|L1.68|
000024  6020              STR      r0,[r4,#0]
000026  1c49              ADDS     r1,r1,#1              ;115
                  |L1.40|
000028  4299              CMP      r1,r3                 ;115
00002a  d3f8              BCC      |L1.30|
;;;118      }
;;;119      return (CRC->DR);
00002c  4805              LDR      r0,|L1.68|
00002e  6800              LDR      r0,[r0,#0]
;;;120    }
000030  bd10              POP      {r4,pc}
;;;121    
                          ENDP

                  CRC_GetCRC PROC
;;;126      */
;;;127    uint32_t CRC_GetCRC(void)
000032  4804              LDR      r0,|L1.68|
;;;128    {
;;;129      return (CRC->DR);
000034  6800              LDR      r0,[r0,#0]
;;;130    }
000036  4770              BX       lr
;;;131    
                          ENDP

                  CRC_SetIDRegister PROC
;;;136      */
;;;137    void CRC_SetIDRegister(uint8_t IDValue)
000038  4902              LDR      r1,|L1.68|
;;;138    {
;;;139      CRC->IDR = IDValue;
00003a  7108              STRB     r0,[r1,#4]
;;;140    }
00003c  4770              BX       lr
;;;141    
                          ENDP

                  CRC_GetIDRegister PROC
;;;146      */
;;;147    uint8_t CRC_GetIDRegister(void)
00003e  4801              LDR      r0,|L1.68|
;;;148    {
;;;149      return (CRC->IDR);
000040  7900              LDRB     r0,[r0,#4]
;;;150    }
000042  4770              BX       lr
;;;151    
                          ENDP

                  |L1.68|
                          DCD      0x40023000
